@page "/register"
@inject HttpClient Http
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-header">
                    <h3 class="text-center">Register</h3>
                </div>               
                <div class="card-body">
                    <EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="username">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="registerModel.Email" />
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
                        </div>
                        <button type="register" class="btn btn-primary btn-block">Cadastrar</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors = new List<string>();

    private async void HandleRegistration()
    {
        var result = await AuthService.Register(registerModel);

        if (result.Username != null)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }
}
